import{_ as e,o,c as r,a as t}from"./app.a9a67de2.js";const f=JSON.parse('{"title":"Other Resources","description":"","frontmatter":{"title":"Other Resources"},"headers":[{"level":2,"title":"Protocol buffers","slug":"protocol-buffers","link":"#protocol-buffers","children":[]},{"level":2,"title":"gRPC","slug":"grpc","link":"#grpc","children":[]},{"level":2,"title":"Terraform","slug":"terraform","link":"#terraform","children":[]},{"level":2,"title":"Git","slug":"git","link":"#git","children":[]},{"level":2,"title":"Google Cloud Platform","slug":"google-cloud-platform","link":"#google-cloud-platform","children":[]},{"level":2,"title":"Go","slug":"go","link":"#go","children":[]}],"relativePath":"guides/references/core-technologies.md"}'),a={name:"guides/references/core-technologies.md"},n=t('<h1 id="core-technologies" tabindex="-1">Core technologies <a class="header-anchor" href="#core-technologies" aria-hidden="true">#</a></h1><p>This page provides a high-level overview of some core technologies used on Alis Build.</p><h2 id="protocol-buffers" tabindex="-1">Protocol buffers <a class="header-anchor" href="#protocol-buffers" aria-hidden="true">#</a></h2><p>Protocol buffers, commonly referred to as <em>protos</em>, provide the interface definition language.</p><p>Protos are the golden source of truth of anything we do on the <strong>alis.exchange</strong>. Starting with protos eliminates common sources of developer toil by:</p><ul><li>Auto-generating documentation for APIs</li><li>Auto-generating source code for the majority of popular languages including Go, Java, Python and more</li><li>Auto-generating equivalent REST endpoints for gRPC services</li></ul><p>Further reading on protos:</p><ul><li><a href="https://developers.google.com/protocol-buffers" target="_blank" rel="noreferrer">Protocol buffers documentation</a></li></ul><h2 id="grpc" tabindex="-1">gRPC <a class="header-anchor" href="#grpc" aria-hidden="true">#</a></h2><p>gRPC is the primary inter-process communication protocol used on <strong>alis.exchange</strong> and is widely adopted by large companies such as <a href="https://grpc.io/about/#whos-using-grpc-and-why%22" target="_blank" rel="noreferrer">Google, Netflix and Square</a>. As explained in the excellent book <a href="https://www.amazon.com/gRPC-Running-Building-Applications-Kubernetes/dp/1492058335" target="_blank" rel="noreferrer">gRPC: Up &amp; Running</a> (pages 10-13):</p><blockquote><p>Modern software applications rarely operate in isolation. Rather, they are connected with each other through computer networks and communicate and coordinate their actions by passing messages to one another. Therefore, a modern software system is a collection of distributed software applications that are running at different network locations and communicate with each other with message passing using different communication protocols.</p><p>Inter-process communications are usually implemented using message passing with a synchronous request-response style or asynchronous event-driven styles.</p><p>When it comes to building synchronous request-response style communication for modern cloud native applications and microservices, the most common and conventional approach is to build them as RESTful services ... however, for most use cases RESTful services are quite bulky,</p></blockquote><p>More on gRPC:</p><ul><li><a href="https://grpc.io/docs/" target="_blank" rel="noreferrer">gRPC documentation</a></li></ul><h2 id="terraform" tabindex="-1">Terraform <a class="header-anchor" href="#terraform" aria-hidden="true">#</a></h2><p>Terraform is an open-source infrastructure as code (IaC) software framework. Terraform codifies cloud APIs into declarative configuration files. On <strong>alis.exchange</strong> this means we never spend time tinkering with infrastructure in a console.</p><ul><li><a href="https://www.terraform.io/intro" target="_blank" rel="noreferrer">Terraform documentation</a></li><li><a href="https://www.youtube.com/watch?v=tomUWcQ0P3k" target="_blank" rel="noreferrer">Terraform in 100 Seconds</a></li><li><a href="https://www.youtube.com/watch?v=HmxkYNv1ksg" target="_blank" rel="noreferrer">Terraform Explained</a></li></ul><h2 id="git" tabindex="-1">Git <a class="header-anchor" href="#git" aria-hidden="true">#</a></h2><p>On <strong>alis.exchange</strong>, we use Git as the version control system and integrate with it to control builds of your products and neurons. We are pattern agnostic, so whether you use a <em>feature branch</em> workflow, <em>trunk-based development</em> or any other pattern, you will be able to develop on <strong>alis.exchange</strong> as long as Git is used.</p><p>If you are not familiar with Git, you can check out the <a href="https://www.youtube.com/watch?v=hwP7WQkmECE" target="_blank"><em>Git Explained in 100 Seconds</em></a> video by Fireship.</p><ul><li><a href="https://docs.github.com/en" target="_blank" rel="noreferrer">Github documentation</a></li></ul><h2 id="google-cloud-platform" tabindex="-1">Google Cloud Platform <a class="header-anchor" href="#google-cloud-platform" aria-hidden="true">#</a></h2><p>Google Cloud Platform (GCP) is a suite of cloud computing services that runs on the same infrastructure that Google uses internally for its end-user products, such as Google Search, Gmail, Google Drive, and YouTube. Alongside a set of management tools, it provides a series of modular cloud services including computing, data storage, data analytics and machine learning.</p><p>Check out <a href="https://www.youtube.com/watch?v=4D3X6Xl5c_Y" target="_blank" rel="noreferrer"><em>Essentials of GCP</em></a> for an overview of their services.</p><ul><li><a href="https://cloud.google.com/docs" target="_blank" rel="noreferrer">Google Cloud documentation</a></li></ul><h2 id="go" tabindex="-1">Go <a class="header-anchor" href="#go" aria-hidden="true">#</a></h2><p>Go is an open source programming language supported by Google. The language is a great place for building <em>&quot;fast, reliable, and efficient software at scale&quot;</em>.</p><p>The highlights of Go are that it&#39;s easy to learn, strongly typed and makes concurrency simple to implement.</p><p>Note worthy resources:</p><ul><li><a href="https://go.dev/doc/" target="_blank" rel="noreferrer">Go documentation</a></li><li><a href="https://go.dev/play/" target="_blank" rel="noreferrer">Go playground</a></li><li><a href="https://acloudguru.com/blog/engineering/what-is-go-an-intro-to-googles-go-programming-language-aka-golang" target="_blank" rel="noreferrer">What is Go? An intro to Google\u2019s Go programming language</a></li><li><a href="https://www.gopl.io/" target="_blank" rel="noreferrer">The Go Programming Language book</a></li></ul>',29),i=[n];function s(l,c,u,g,h,d){return o(),r("div",null,i)}const m=e(a,[["render",s]]);export{f as __pageData,m as default};
