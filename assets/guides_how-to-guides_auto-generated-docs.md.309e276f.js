import{_ as e,o as s,c as a,a as n}from"./app.ba36920a.js";const t="/assets/docs-folder-structure.af0f1c35.png",f=JSON.parse('{"title":"Leveraging auto-generated documentation","description":"","frontmatter":{"title":"Leveraging auto-generated documentation"},"headers":[{"level":2,"title":"Overview","slug":"overview","link":"#overview","children":[]},{"level":2,"title":"Updating reference documentation","slug":"updating-reference-documentation","link":"#updating-reference-documentation","children":[]},{"level":2,"title":"Writing guides and samples","slug":"writing-guides-and-samples","link":"#writing-guides-and-samples","children":[]},{"level":2,"title":"Deploying documentation","slug":"deploying-documentation","link":"#deploying-documentation","children":[{"level":3,"title":"Auto-generated nightly release","slug":"auto-generated-nightly-release","link":"#auto-generated-nightly-release","children":[]},{"level":3,"title":"Manual release","slug":"manual-release","link":"#manual-release","children":[]}]}],"relativePath":"guides/how-to-guides/auto-generated-docs.md"}'),o={name:"guides/how-to-guides/auto-generated-docs.md"},l=n(`<h1 id="leveraging-auto-generated-documentation" tabindex="-1">Leveraging auto-generated documentation <a class="header-anchor" href="#leveraging-auto-generated-documentation" aria-hidden="true">#</a></h1><p>The Alis Build platform provides out-of-the-box documentation for products built on the platform. This documentation consists of API reference documentation auto-generated directly from the protocol buffers, custom user guides and code samples which teams may compile to provide greater assistance to clients.</p><p>In this guide, we aim to give you the necessary background to leverage this documentation service.</p><div class="tip custom-block"><p class="custom-block-title"><strong>Before you start</strong></p><ol><li>Download and install the <a href="/guides/getting-started/command-line-interface.html">Alis CLI</a>;</li><li>Ensure you are part of an existing organisation and product on the platform;</li><li>Have pulled the latest version of your organisation&#39;s protos by running <code>alis org get {yourOrg}</code>.</li></ol></div><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-hidden="true">#</a></h2><p>The product documentation is generated by parsing the following files in the relevant product directory of your organisation&#39;s <code>proto</code> repo:</p><ol><li>The <code>resources</code> and <code>services</code> proto files which are used to generate the reference documentation based on the contents of each proto file as per their latest release (<code>alis proto release</code>).</li><li>The custom markdown files contained within the <code>docs</code> folder, used to generate the landing page, guides and samples.</li></ol><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">proto</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500{orgID}</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2514\u2500\u2500 {productID}</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502       \u251C\u2500\u2500 docs/.../*.md</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502       \u251C\u2500\u2500 resources/.../*.proto</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502       \u2514\u2500\u2500 services/.../*.proto</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Once the documentation has been released, it will be publicly available at <a href="https://docs.de.alis.services" target="_blank" rel="noreferrer">https://docs.{productID}.{orgDomain}</a> (e.g. <a href="https://docs.de.alis.services" target="_blank" rel="noreferrer">https://docs.de.alis.services</a>).</p><h2 id="updating-reference-documentation" tabindex="-1">Updating reference documentation <a class="header-anchor" href="#updating-reference-documentation" aria-hidden="true">#</a></h2><p>The reference documentation component is generated from the proto files. The emphasis on the definition first-approach ensures that the effort is focussed on the design of the protos with detailed comments above the various services, methods, messages and fields and this design is then propagated into the reference documentation for the APIs.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>It is important to note that this auto-generated documentation is publicly available. Any protocol buffer content that should not be publicly available should be specified as <code>hidden</code>. The <a href="/guides/how-to-guides/proto-visibility-scopes.html">specifying proto visibility scopes guide</a> explains how to implement visibility scopes.</p></div><div class="danger custom-block"><p class="custom-block-title"><strong>Caveats</strong></p><p>A current caveat is that the use of certain Markdown syntax in your comments may result in invalid Markdown syntax in the generated documentation, causing the build of your documentation to fail. This is primarily the usage of the \u201C|\u201D character in your proto comments as well as using line breaks in links.</p></div><h2 id="writing-guides-and-samples" tabindex="-1">Writing guides and samples <a class="header-anchor" href="#writing-guides-and-samples" aria-hidden="true">#</a></h2><p>The initial state (after a product creation) of the <code>docs</code> directory should resemble the folder structure depicted below, i.e. must then have an <code>index.md</code> file at the root of <code>docs</code> as well as <code>guides</code>, <code>reference</code> and <code>samples</code> subdirectories each containing an <code>index.md</code> directory.</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">docs</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 index.md</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 guides</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2514\u2500\u2500index.md</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 reference</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2514\u2500\u2500 index.md</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2514\u2500\u2500 samples</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2514\u2500\u2500 index.md</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2514\u2500\u2500 index.md</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>The <code>index.md</code> file at the root directory, serves as the landing page for the documentation site and can be customised using the (VitePress Home Page theme)[<a href="https://vitepress.vuejs.org/guide/theme-home-page#home-page" target="_blank" rel="noreferrer">https://vitepress.vuejs.org/guide/theme-home-page#home-page</a>]. The other <code>index.md</code> files is the respective page that will be opened when the <code>guides</code>, <code>reference</code> and <code>samples</code> navigation tab is opened on the site.</p><p>Any subdirectory added under <code>guides</code> and <code>samples</code> will be converted into a heading in the documentation navigation sidebar, it&#39;s depth being determined by the file structure. Markdown files can then be placed inside either the root or any of the subdirectories of <code>guides</code> and <code>samples</code> and will be added to the documentation sidebar. An example file structure and the resulting documentation navigation sidebar for the <code>guides</code> section is depicted below.</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 guides</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 how-to-guides</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2502   \u251C\u2500\u2500 first_screening.md</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2502   \u2514\u2500\u2500 getting_started.md</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 index.md</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 quick-starts</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2502   \u2514\u2500\u2500 some_quick_start.md</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 some-cool-directory</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2502   \u2514\u2500\u2500 cool-content.md</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2514\u2500\u2500 tutorials</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502       \u251C\u2500\u2500 advanced</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502       \u2502   \u251C\u2500\u2500 sub_file1.md</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502       \u2502   \u2514\u2500\u2500 sub_file2.md</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502       \u251C\u2500\u2500 main_file.md</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502       \u2514\u2500\u2500 sub_file1.md</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 index.md</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 reference</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2514\u2500\u2500 index.md</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2514\u2500\u2500 samples</span></span>
<span class="line"><span style="color:#A6ACCD;">    \u251C\u2500\u2500 code_sample_1.md</span></span>
<span class="line"><span style="color:#A6ACCD;">    \u251C\u2500\u2500 index.md</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><img src="`+t+`" alt=""></p><p>The titles used in the sidebar is derived from the <code>title</code> field in the <a href="https://vitepress.vuejs.org/guide/frontmatter" target="_blank" rel="noreferrer">file&#39;s YAML Frontmatter</a>. For example, the <code>guides/how-to-guides/first_screening.md</code> file, the YAML Frontmatter would be:</p><div class="language-yaml"><button class="copy"></button><span class="lang">yaml</span><pre><code><span class="line"><span style="color:#FFCB6B;">---</span></span>
<span class="line"><span style="color:#F07178;">title</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Conduct your first screening</span></span>
<span class="line"><span style="color:#FFCB6B;">---</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#C3E88D;">Your file content</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">...</span></span>
<span class="line"></span></code></pre></div><p>Content to be generated on the documentation page should follow the Frontmatter.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Since our documentation uses <a href="https://vitepress.vuejs.org/" target="_blank" rel="noreferrer">VitePress</a> under the hood, you can leverage the functionality of VitePress <a href="https://vitepress.vuejs.org/guide/markdown" target="_blank" rel="noreferrer">Markdown Extensions</a> and to get the most out of your documentation.</p></div><h2 id="deploying-documentation" tabindex="-1">Deploying documentation <a class="header-anchor" href="#deploying-documentation" aria-hidden="true">#</a></h2><p>The platform runs a nightly build and release of all product documentation as well as provides a means to manually update documentation. These are discussed in the following sections.</p><h3 id="auto-generated-nightly-release" tabindex="-1">Auto-generated nightly release <a class="header-anchor" href="#auto-generated-nightly-release" aria-hidden="true">#</a></h3><p>The nightly build of all product documentation will reflect:</p><ol><li>The reference documentation of the last released protocol buffers;</li><li>The state of the documentation in the repo&#39;s <code>master</code> branch when the build is kicked off.</li></ol><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>It is essential that documentation that is present in the master branch is production ready.</p></div><h3 id="manual-release" tabindex="-1">Manual release <a class="header-anchor" href="#manual-release" aria-hidden="true">#</a></h3><p>Cases exist where teams may want to deploy a new version of the documentation, such as: adding new documentation pages, updating protocol buffers or making fixes to existing pages. To run a manual release, the <a href="/guides/getting-started/command-line-interface.html">Alis Build CLI</a> will be used and the following steps can be followed:</p><ol><li>Ensure the all the markdown files in the docs folder have been committed and pushed to the master branch;</li><li>Ensure you have released the most up-to-date protos in terms of their content and commentary;</li><li>In your terminal, run the <code>alis docs release</code> command and specify the product (<code>{orgID}.{productID}</code>). Example:</li></ol><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">$ alis docs release play.dm</span></span>
<span class="line"></span></code></pre></div><ol start="4"><li>The documentation will be available at: <code>https://docs.{productID}.{orgDomain}</code> (e.g. <a href="https://docs.de.alis.services" target="_blank" rel="noreferrer">https://docs.de.alis.services</a>)</li></ol>`,35),i=[l];function r(d,c,p,u,h,g){return s(),a("div",null,i)}const y=e(o,[["render",r]]);export{f as __pageData,y as default};
