import{_ as e,c as s,o as a,a as o}from"./app.70ec3866.js";const n="/assets/quick-start-autocomplete1.1e70829f.gif",t="/assets/quick-start-autocomplete2.e14f46e2.gif",y=JSON.parse('{"title":"Quick Start","description":"","frontmatter":{"title":"Quick Start","next":"/guides/consume/make-your-first-request","sidebarDepth":0},"headers":[{"level":2,"title":"Definition-first approach","slug":"definition-first-approach","link":"#definition-first-approach","children":[]},{"level":2,"title":"Experience the simplicity","slug":"experience-the-simplicity","link":"#experience-the-simplicity","children":[{"level":3,"title":"Books.proto","slug":"books-proto","link":"#books-proto","children":[]},{"level":3,"title":"Run the example","slug":"run-the-example","link":"#run-the-example","children":[]}]},{"level":2,"title":"Next Steps","slug":"next-steps","link":"#next-steps","children":[]}],"relativePath":"guides/consume/quick-start.md"}'),r={name:"guides/consume/quick-start.md"},i=o('<h1 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-hidden="true">#</a></h1><p>We aim to ensure that how software across <strong>alis.exchange</strong> operates, communicates and integrates is simple and consistent. Whether you are getting results from a model, updating a database or executing trades, all of these actions should feel familiar. This allows you to seamlessly adopt anything across <strong>alis.exchange</strong> without spending hours in obscure documentation and the toil of attempting to integrate it in your code.</p><p>What does that experience feel like? In this section, we want to provide you with a few basic concepts and then allow you to experience <strong>alis.exchange</strong> for yourself. Below is a teaser of what you can expect \u{1F609}.</p><p><img src="'+n+'" alt=""></p><p><img src="'+t+`" alt=""></p><h2 id="definition-first-approach" tabindex="-1">Definition-first approach <a class="header-anchor" href="#definition-first-approach" aria-hidden="true">#</a></h2><p><strong>alis.exchange</strong> leverages a core set of open-source technologies, all certified by the <a href="https://www.cncf.io/" target="_blank" rel="noreferrer">Cloud Native Computing Foundation</a>. An essential part of how we make <strong>alis.exchange</strong> work is the strict adoption of <a href="https://developers.google.com/protocol-buffers" target="_blank" rel="noreferrer">Protocol Buffers</a>, also referred to as <em>Protobufs</em>.</p><p>From a technical perspective:</p><blockquote><p>Protocol buffers are a language-neutral, platform-neutral extensible mechanism for serializing structured data. <a href="https://developers.google.com/protocol-buffers" target="_blank" rel="noreferrer">Source</a></p></blockquote><p>What is important from a practical perspective however is that:</p><blockquote><p>You <strong>define how you want your data to be structured once</strong>, then you can use special generated source code to easily write and read your structured data to and from a variety of data streams and using a variety of languages. <a href="https://developers.google.com/protocol-buffers" target="_blank" rel="noreferrer">Source</a></p></blockquote><p>Two things to take note of:</p><ol><li>Defining things is the first, essential part of building on <strong>alis.exchange</strong>. Everything that you will be working with (<em>resources</em>) and what you will be doing (<em>services</em>) is defined once in a <code>.proto</code> file.</li><li>The definitions of these resources and services are then used to generate source code in the language of your choice to implement, or work with, the resources and services you defined.</li></ol><p>Find out more about Protobufs, their usage and benefits on <strong>alis.exchange</strong> in the <a href="/references/other-resources/other-resources.html">supplementary material</a>.</p><h2 id="experience-the-simplicity" tabindex="-1">Experience the simplicity <a class="header-anchor" href="#experience-the-simplicity" aria-hidden="true">#</a></h2><h3 id="books-proto" tabindex="-1">Books.proto <a class="header-anchor" href="#books-proto" aria-hidden="true">#</a></h3><p>Let us consider a <code>Book</code> resource with <em>name</em>, <em>display name</em>, <em>authors</em> and <em>publishers</em> as fields. This is defined in a <code>books.proto</code> file as follows:</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">// The definition of a book resource.</span></span>
<span class="line"><span style="color:#A6ACCD;">message Book {</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">	// The name of the book.</span></span>
<span class="line"><span style="color:#A6ACCD;">	// Format: books/{book}.</span></span>
<span class="line"><span style="color:#A6ACCD;">	string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">	// The display name of the book.</span></span>
<span class="line"><span style="color:#A6ACCD;">	string display_name = 2 [(google.api.field_behavior) = REQUIRED];</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">	// The authors of the book.</span></span>
<span class="line"><span style="color:#A6ACCD;">	repeated string authors = 3 [(google.api.field_behavior) = REQUIRED];</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">	// The publisher of the book</span></span>
<span class="line"><span style="color:#A6ACCD;">	string publisher = 4 [(google.api.field_behavior) = REQUIRED];</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>The builders of this product allows you to list all the books available, <code>ListBooks</code>, and to retrieve the details of a specific book, <code>GetBook</code>. These are also defined in the <code>books.proto</code> file as part of the <code>BooksService</code>:</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">// Book service for foo.br.</span></span>
<span class="line"><span style="color:#A6ACCD;">service BooksService {</span></span>
<span class="line"><span style="color:#A6ACCD;">	// List all available books.</span></span>
<span class="line"><span style="color:#A6ACCD;">	rpc ListBooks(ListBooksRequest) returns (ListBooksResponse) {</span></span>
<span class="line"><span style="color:#A6ACCD;">		option (google.api.http) = {</span></span>
<span class="line"><span style="color:#A6ACCD;">			get: &quot;/resources/books/v1/books&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">		};</span></span>
<span class="line"><span style="color:#A6ACCD;">	}</span></span>
<span class="line"><span style="color:#A6ACCD;">	// Get a specific book.</span></span>
<span class="line"><span style="color:#A6ACCD;">	rpc GetBook(GetBookRequest) returns (Book) {</span></span>
<span class="line"><span style="color:#A6ACCD;">		option (google.api.http) = {</span></span>
<span class="line"><span style="color:#A6ACCD;">			get: &quot;/resources/store/v1/{name=books/*}&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">		};</span></span>
<span class="line"><span style="color:#A6ACCD;">		option (google.api.method_signature) = &quot;name&quot;;</span></span>
<span class="line"><span style="color:#A6ACCD;">	}</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Now that we know what resource is available, <code>Book</code>, and what we are able to do with it, <code>ListBooks</code> and <code>GetBook</code>, we can get practical.</p><h3 id="run-the-example" tabindex="-1">Run the example <a class="header-anchor" href="#run-the-example" aria-hidden="true">#</a></h3><p>Experience the simplicity in accessing these methods in any of the supported languages in using one of our preconfigured cloud IDEs:</p><h4 id="make-a-request-using-go" tabindex="-1">Make a request using Go <a class="header-anchor" href="#make-a-request-using-go" aria-hidden="true">#</a></h4><p><a href="https://gitpod.io#snapshot/c1eafefa-0414-439e-a618-4089e1d50143" target="_blank">Preconfigured Go cloud IDE</a></p><ol><li><p>Open up the terminal (Mac: <code>\u2318 + j</code>, Windows: <code>ctrl + j</code> ).</p><blockquote><p>If the terminal is already open run <code>$ clear</code> to clear the terminal window.</p></blockquote></li><li><p>Make sure you are in the <code>playground</code> directory.</p><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> workspace/playground</span></span>
<span class="line"></span></code></pre></div></li><li><p>Run the code by running the terminal command:</p><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">go run </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">.go</span></span>
<span class="line"></span></code></pre></div></li></ol><h4 id="get-a-feel-for-the-alis-exchange-experience" tabindex="-1">Get a feel for the <strong>alis.exchange</strong> experience <a class="header-anchor" href="#get-a-feel-for-the-alis-exchange-experience" aria-hidden="true">#</a></h4><p>Interested in trying something for yourself?</p><p>We suggest creating your own function and incorporating a request to the <code>BooksClient</code>. Some suggestions of things to try:</p><ul><li>Loop through all the books and print out the author.</li><li>Get a book and wrangle the response to be printed out in a sentence structure.</li><li>Use the response of <code>ListBooks</code> to make multiple <code>GetBook</code> requests.</li></ul><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">yarn add -D vitepress</span></span>
<span class="line"></span></code></pre></div><h4 id="make-a-request-using-r" tabindex="-1">Make a request using R <a class="header-anchor" href="#make-a-request-using-r" aria-hidden="true">#</a></h4><p><a href="https://gitpod.io#snapshot/c858a081-f9e0-4791-9330-606a568df6fd" target="_blank">Preconfigured R cloud IDE</a></p><ol><li><p>Open up the terminal (Mac: <code>\u2318 + j</code>, Windows: <code>ctrl + j</code> ).</p><blockquote><p>If the terminal is already open run <code>$ clear</code> to clear the terminal window.</p></blockquote></li><li><p>Make sure you are in the <code>playground</code> directory.</p></li></ol><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> workspace/playground</span></span>
<span class="line"></span></code></pre></div><ol start="3"><li>Run the code</li></ol><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">Rscript booksConsume.r</span></span>
<span class="line"></span></code></pre></div><h4 id="get-a-feel-for-the-alis-exchange-experience-1" tabindex="-1">Get a feel for the <strong>alis.exchange</strong> experience <a class="header-anchor" href="#get-a-feel-for-the-alis-exchange-experience-1" aria-hidden="true">#</a></h4><p>Interested in trying something for yourself?</p><p>We suggest creating your own function and incorporating a request to the <code>BooksClient</code>. Some suggestions of things to try:</p><ul><li>Loop through all the books and print out the author.</li><li>Get a book and wrangle the response to be printed out in a sentence structure.</li><li>Use the response of <code>ListBooks</code> to make multiple <code>GetBook</code> requests.</li></ul><p>If you are interested in recreating this example in your own development environment, we suggest that you check out the <a href="/guides/consume/make-your-first-request.html">Make your first request guide</a>.</p><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-hidden="true">#</a></h2><p><strong>Ready to join alis.exchange?</strong> <a href="https://alis.exchange/signup" target="_blank">Get in touch</a>.</p>`,44),l=[i];function p(c,d,h,u,g,f){return a(),s("div",null,l)}const b=e(r,[["render",p]]);export{y as __pageData,b as default};
